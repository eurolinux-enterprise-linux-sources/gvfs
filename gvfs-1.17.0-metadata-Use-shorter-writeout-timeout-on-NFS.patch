diff -up gvfs-1.4.3/metadata/meta-daemon.c.bak gvfs-1.4.3/metadata/meta-daemon.c
--- gvfs-1.4.3/metadata/meta-daemon.c.bak	2009-12-14 09:31:02.000000000 +0100
+++ gvfs-1.4.3/metadata/meta-daemon.c	2013-05-07 18:49:17.000000000 +0200
@@ -33,6 +33,7 @@
 #include "gvfsdaemonprotocol.h"
 
 #define WRITEOUT_TIMEOUT_SECS 60
+#define WRITEOUT_TIMEOUT_SECS_NFS 15
 
 typedef struct {
   char *filename;
@@ -67,10 +68,15 @@ writeout_timeout (gpointer data)
 static void
 tree_info_schedule_writeout (TreeInfo *info)
 {
+  gboolean on_nfs;
+
   if (info->writeout_timeout == 0)
-    info->writeout_timeout =
-      g_timeout_add_seconds (WRITEOUT_TIMEOUT_SECS,
-			     writeout_timeout, info);
+    {
+      on_nfs = meta_tree_is_on_nfs (info->tree);
+      info->writeout_timeout =
+        g_timeout_add_seconds (on_nfs ? WRITEOUT_TIMEOUT_SECS_NFS : WRITEOUT_TIMEOUT_SECS,
+			       writeout_timeout, info);
+    }
 }
 
 static TreeInfo *
diff -up gvfs-1.4.3/metadata/metatree.c.bak gvfs-1.4.3/metadata/metatree.c
--- gvfs-1.4.3/metadata/metatree.c.bak	2013-05-07 18:48:51.000000000 +0200
+++ gvfs-1.4.3/metadata/metatree.c	2013-05-07 18:49:17.000000000 +0200
@@ -474,6 +474,12 @@ meta_tree_exists (MetaTree *tree)
   return tree->fd != -1;
 }
 
+gboolean
+meta_tree_is_on_nfs (MetaTree *tree)
+{
+  return tree->on_nfs;
+}
+
 static GHashTable *cached_trees = NULL;
 G_LOCK_DEFINE_STATIC (cached_trees);
 
diff -up gvfs-1.4.3/metadata/metatree.h.bak gvfs-1.4.3/metadata/metatree.h
--- gvfs-1.4.3/metadata/metatree.h.bak	2009-06-26 11:10:11.000000000 +0200
+++ gvfs-1.4.3/metadata/metatree.h	2013-05-07 18:49:17.000000000 +0200
@@ -66,6 +66,7 @@ void        meta_tree_unref          (Me
 void        meta_tree_refresh        (MetaTree   *tree);
 const char *meta_tree_get_filename   (MetaTree   *tree);
 gboolean    meta_tree_exists         (MetaTree   *tree);
+gboolean    meta_tree_is_on_nfs      (MetaTree   *tree);
 
 MetaKeyType meta_tree_lookup_key_type  (MetaTree                         *tree,
 					const char                       *path,
